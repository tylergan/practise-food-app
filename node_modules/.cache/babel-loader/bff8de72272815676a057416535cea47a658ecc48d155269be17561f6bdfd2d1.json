{"ast":null,"code":"var _jsxFileName = \"/Users/tylergan/Desktop/Visual Studio Code/Personal/JavaScript/React - The Complete Guide/practise-food-order-app/src/components/Cart/Checkout/Checkout.js\",\n  _s = $RefreshSig$();\nimport CheckoutInput from './CheckoutInput';\nimport useInputForm from '../../../hooks/use-input-form';\nimport styles from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() !== '';\nconst isFourChars = value => value.trim().length === 4;\nconst Checkout = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInputForm(isEmpty);\n  const {\n    value: enteredStreet,\n    isValid: enteredStreetIsValid,\n    hasError: streetInputHasError,\n    valueChangeHandler: streetChangeHandler,\n    inputBlurHandler: streetBlurHandler,\n    reset: resetStreetInput\n  } = useInputForm(isEmpty);\n  const {\n    value: enteredPostal,\n    isValid: enteredPostalIsValid,\n    hasError: postalInputHasError,\n    valueChangeHandler: postalChangeHandler,\n    inputBlurHandler: postalBlurHandler,\n    reset: resetPostalInput\n  } = useInputForm(isFourChars);\n  const {\n    value: enteredCity,\n    isValid: enteredCityIsValid,\n    hasError: cityInputHasError,\n    valueChangeHandler: cityChangeHandler,\n    inputBlurHandler: cityBlurHandler,\n    reset: resetCityInput\n  } = useInputForm(isEmpty);\n  const confirmHandler = event => {\n    event.preventDefault();\n\n    // if we confirm the form, it is automatically considered as \"touched\"\n    nameBlurHandler();\n    streetBlurHandler();\n    postalBlurHandler();\n    cityBlurHandler();\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    const userData = {\n      name: enteredName,\n      street: enteredStreet,\n      postal: enteredPostal,\n      city: enteredCity\n    };\n\n    // send the data to database\n\n    resetNameInput();\n    resetStreetInput();\n    resetPostalInput();\n    resetCityInput();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(CheckoutInput, {\n      label: \"Your Name\",\n      isValid: !nameInputHasError,\n      input: {\n        id: 'name',\n        type: 'text',\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutInput, {\n      label: \"Street\",\n      isValid: !streetInputHasError,\n      input: {\n        id: 'street',\n        type: 'text',\n        onChange: streetChangeHandler,\n        onBlur: streetBlurHandler\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutInput, {\n      label: \"Postal Code\",\n      isValid: !postalInputHasError,\n      input: {\n        id: 'postal',\n        type: 'text',\n        onChange: postalChangeHandler,\n        onBlur: postalBlurHandler\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutInput, {\n      label: \"City\",\n      isValid: !cityInputHasError,\n      input: {\n        id: 'city',\n        type: 'text',\n        onChange: cityChangeHandler,\n        onBlur: cityBlurHandler\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"XuJAcnZUmA6O5I/dSzExhzJPdlo=\", false, function () {\n  return [useInputForm, useInputForm, useInputForm, useInputForm];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["CheckoutInput","useInputForm","styles","isEmpty","value","trim","isFourChars","length","Checkout","props","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","enteredStreet","enteredStreetIsValid","streetInputHasError","streetChangeHandler","streetBlurHandler","resetStreetInput","enteredPostal","enteredPostalIsValid","postalInputHasError","postalChangeHandler","postalBlurHandler","resetPostalInput","enteredCity","enteredCityIsValid","cityInputHasError","cityChangeHandler","cityBlurHandler","resetCityInput","confirmHandler","event","preventDefault","formIsValid","userData","name","street","postal","city","form","id","type","onChange","onBlur","actions","onCancel","submit"],"sources":["/Users/tylergan/Desktop/Visual Studio Code/Personal/JavaScript/React - The Complete Guide/practise-food-order-app/src/components/Cart/Checkout/Checkout.js"],"sourcesContent":["import CheckoutInput from './CheckoutInput'\nimport useInputForm from '../../../hooks/use-input-form'\nimport styles from './Checkout.module.css'\n\nconst isEmpty = (value) => value.trim() !== ''\nconst isFourChars = (value) => value.trim().length === 4\n\nconst Checkout = (props) => {\n    const {\n        value: enteredName,\n        isValid: enteredNameIsValid,\n        hasError: nameInputHasError,\n        valueChangeHandler: nameChangeHandler,\n        inputBlurHandler: nameBlurHandler,\n        reset: resetNameInput\n    } = useInputForm(isEmpty)\n\n    const {\n        value: enteredStreet,\n        isValid: enteredStreetIsValid,\n        hasError: streetInputHasError,\n        valueChangeHandler: streetChangeHandler,\n        inputBlurHandler: streetBlurHandler,\n        reset: resetStreetInput\n    } = useInputForm(isEmpty)\n\n    const {\n        value: enteredPostal,\n        isValid: enteredPostalIsValid,\n        hasError: postalInputHasError,\n        valueChangeHandler: postalChangeHandler,\n        inputBlurHandler: postalBlurHandler,\n        reset: resetPostalInput\n    } = useInputForm(isFourChars)\n\n    const {\n        value: enteredCity,\n        isValid: enteredCityIsValid,\n        hasError: cityInputHasError,\n        valueChangeHandler: cityChangeHandler,\n        inputBlurHandler: cityBlurHandler,\n        reset: resetCityInput\n    } = useInputForm(isEmpty)\n\n    const confirmHandler = (event) => {\n        event.preventDefault()\n\n        // if we confirm the form, it is automatically considered as \"touched\"\n        nameBlurHandler()\n        streetBlurHandler()\n        postalBlurHandler()\n        cityBlurHandler()\n\n        const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid\n\n        if (!formIsValid) {\n            return\n        }\n\n        const userData = {\n            name: enteredName,\n            street: enteredStreet,\n            postal: enteredPostal,\n            city: enteredCity\n        }\n\n        // send the data to database\n\n        resetNameInput()\n        resetStreetInput()\n        resetPostalInput()\n        resetCityInput()\n    };\n\n    return (\n        <form className={styles.form} onSubmit={confirmHandler}>\n            <CheckoutInput label=\"Your Name\" isValid={!nameInputHasError} input={{\n                id: 'name',\n                type: 'text',\n                onChange: nameChangeHandler,\n                onBlur: nameBlurHandler,\n            }}/>\n\n            <CheckoutInput label=\"Street\" isValid={!streetInputHasError} input={{\n                id: 'street',\n                type: 'text',\n                onChange: streetChangeHandler,\n                onBlur: streetBlurHandler,\n            }}/>\n\n            <CheckoutInput label=\"Postal Code\" isValid={!postalInputHasError}  input={{\n                id: 'postal',\n                type: 'text',\n                onChange: postalChangeHandler,\n                onBlur: postalBlurHandler,\n            }}/>\n\n            <CheckoutInput label=\"City\" isValid={!cityInputHasError}  input={{\n                id: 'city',\n                type: 'text',\n                onChange: cityChangeHandler,\n                onBlur: cityBlurHandler,\n            }}/>\n\n            <div className={styles.actions}>\n                <button type='button' onClick={props.onCancel}>\n                Cancel\n                </button>\n                <button className={styles.submit}>Confirm</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Checkout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}