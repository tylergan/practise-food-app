{"ast":null,"code":"var _jsxFileName = \"/Users/tylergan/Desktop/Visual Studio Code/Personal/JavaScript/React - The Complete Guide/practise-food-order-app/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport CheckoutInput from './CheckoutInput';\nimport styles from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isFourChars = value => value.trim().length === 4;\nconst Checkout = props => {\n  _s();\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = isFourChars(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postal: enteredPostalIsValid,\n      city: enteredCityIsValid\n    });\n    console.log(formInputsValidity);\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    const userData = {\n      name: enteredName,\n      street: enteredStreet,\n      postal: enteredPostal,\n      city: enteredCity\n    };\n    props.onConfirm(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(CheckoutInput, {\n      label: \"Your Name\",\n      isValid: formInputsValidity.name,\n      input: {\n        id: 'name',\n        type: 'text'\n      },\n      ref: nameInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutInput, {\n      label: \"Street\",\n      isValid: formInputsValidity.street,\n      input: {\n        id: 'street',\n        type: 'text'\n      },\n      ref: streetInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutInput, {\n      label: \"Postal Code\",\n      isValid: formInputsValidity.postal,\n      input: {\n        id: 'postal',\n        type: 'text'\n      },\n      ref: postalInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutInput, {\n      label: \"City\",\n      isValid: formInputsValidity.city,\n      input: {\n        id: 'city',\n        type: 'text'\n      },\n      ref: cityInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"00PTPY+B5QeAFbpbv3VHpxGiiiE=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","CheckoutInput","styles","isEmpty","value","trim","isFourChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","postal","city","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","console","log","formIsValid","userData","onConfirm","form","id","type","actions","onCancel","submit"],"sources":["/Users/tylergan/Desktop/Visual Studio Code/Personal/JavaScript/React - The Complete Guide/practise-food-order-app/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react'\n\nimport CheckoutInput from './CheckoutInput'\nimport styles from './Checkout.module.css'\n\nconst isEmpty = (value) => value.trim() === ''\nconst isFourChars = (value) => value.trim().length === 4\n\nconst Checkout = (props) => {\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name: true,\n        street: true,\n        postal: true,\n        city: true\n    })\n\n    const nameInputRef = useRef()\n    const streetInputRef = useRef()\n    const postalInputRef = useRef()\n    const cityInputRef = useRef()\n\n    const confirmHandler = (event) => {\n        event.preventDefault()\n\n        const enteredName = nameInputRef.current.value\n        const enteredStreet = streetInputRef.current.value\n        const enteredPostal = postalInputRef.current.value\n        const enteredCity = cityInputRef.current.value\n\n        const enteredNameIsValid = !isEmpty(enteredName)\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\n        const enteredPostalIsValid = isFourChars(enteredPostal)\n        const enteredCityIsValid = !isEmpty(enteredCity)\n\n        setFormInputsValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            postal: enteredPostalIsValid,\n            city: enteredCityIsValid\n        })\n\n        console.log(formInputsValidity)\n\n        const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid\n\n        if (!formIsValid) {\n            return\n        }\n\n        const userData = {\n            name: enteredName,\n            street: enteredStreet,\n            postal: enteredPostal,\n            city: enteredCity\n        }\n\n        props.onConfirm(userData)\n    };\n\n    return (\n        <form className={styles.form} onSubmit={confirmHandler}>\n            <CheckoutInput label=\"Your Name\" isValid={formInputsValidity.name} input={{\n                id: 'name',\n                type: 'text',\n            }} ref={nameInputRef}/>\n\n            <CheckoutInput label=\"Street\" isValid={formInputsValidity.street} input={{\n                id: 'street',\n                type: 'text',\n            }} ref={streetInputRef}/>\n\n            <CheckoutInput label=\"Postal Code\" isValid={formInputsValidity.postal}  input={{\n                id: 'postal',\n                type: 'text',\n            }} ref={postalInputRef}/>\n\n            <CheckoutInput label=\"City\" isValid={formInputsValidity.city}  input={{\n                id: 'city',\n                type: 'text',\n            }} ref={cityInputRef}/>\n\n            <div className={styles.actions}>\n                <button type='button' onClick={props.onCancel}>\n                Cancel\n                </button>\n                <button className={styles.submit}>Confirm</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Checkout"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}