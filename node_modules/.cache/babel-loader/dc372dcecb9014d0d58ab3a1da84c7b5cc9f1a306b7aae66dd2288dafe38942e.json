{"ast":null,"code":"var _jsxFileName = \"/Users/tylergan/Desktop/Visual Studio Code/Personal/JavaScript/React - The Complete Guide/practise-food-order-app/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styles from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MealsAvailable() {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-29098-default-rtdb.firebaseio.com/Meals.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals.catch(error => {\n      // fetchMeals() returns a promise, so we need to use .catch() to handle errors rather than try/catch\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(MealsAvailable, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n_c = MealsAvailable;\nvar _c;\n$RefreshReg$(_c, \"MealsAvailable\");","map":{"version":3,"names":["useEffect","useState","styles","Card","MealItem","MealsAvailable","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","mealsLoading","mealsError","mealsList","map","meal"],"sources":["/Users/tylergan/Desktop/Visual Studio Code/Personal/JavaScript/React - The Complete Guide/practise-food-order-app/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport styles from './AvailableMeals.module.css'\nimport Card from '../UI/Card'\nimport MealItem from './MealItem/MealItem'\n\nexport default function MealsAvailable() {\n    const [meals, setMeals] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [httpError, setHttpError] = useState()\n\n    useEffect(() => {\n        const fetchMeals = async () => {\n            const response = await fetch('https://react-http-29098-default-rtdb.firebaseio.com/Meals.json')\n            \n            if (!response.ok) {\n                throw new Error('Something went wrong!')\n            }\n            \n            const responseData = await response.json()\n\n            const loadedMeals = []\n\n            for (const key in responseData) {\n                loadedMeals.push({\n                    id: key,\n                    name: responseData[key].name,\n                    description: responseData[key].description,\n                    price: responseData[key].price,\n                })\n            }\n\n            setMeals(loadedMeals)\n            setIsLoading(false)\n        }\n\n        fetchMeals.catch(error => {  // fetchMeals() returns a promise, so we need to use .catch() to handle errors rather than try/catch\n            setIsLoading(false)\n            setHttpError(error.message)\n        })\n        \n    }, [])\n\n    if (isLoading) {\n        return (\n            <section className={styles.mealsLoading}>\n                <p>Loading...</p>\n            </section>\n        )\n    }\n\n    if (httpError) {\n        return (\n            <section className={styles.mealsError}>\n                <p>{httpError}</p>\n            </section>\n        )\n    }\n\n    const mealsList = meals.map(meal =>\n        <MealItem\n            key={meal.id}\n            id={meal.id}\n            name={meal.name}\n            description={meal.description}\n            price={meal.price}\n        />  \n    )\n\n    return (\n        <section className={styles.meals}>\n            <Card>\n                <ul>\n                    {mealsList}\n                </ul>\n            </Card>\n        </section>\n    )\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAAA;AAE1C,eAAe,SAASC,cAAc,GAAG;EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,EAAE;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAG,YAAY;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE,CAAC;MAE/F,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAE1C,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAE;QAC5BE,WAAW,CAACE,IAAI,CAAC;UACbC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,WAAW,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;UAC1CC,KAAK,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;QAC7B,CAAC,CAAC;MACN;MAEAlB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDG,UAAU,CAACc,KAAK,CAACC,KAAK,IAAI;MAAG;MACzBlB,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAACgB,KAAK,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;EAEN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIpB,SAAS,EAAE;IACX,oBACI;MAAS,SAAS,EAAEN,MAAM,CAAC2B,YAAa;MAAA,uBACpC;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACX;EAElB;EAEA,IAAInB,SAAS,EAAE;IACX,oBACI;MAAS,SAAS,EAAER,MAAM,CAAC4B,UAAW;MAAA,uBAClC;QAAA,UAAIpB;MAAS;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACZ;EAElB;EAEA,MAAMqB,SAAS,GAAGzB,KAAK,CAAC0B,GAAG,CAACC,IAAI,iBAC5B,QAAC,QAAQ;IAEL,EAAE,EAAEA,IAAI,CAACX,EAAG;IACZ,IAAI,EAAEW,IAAI,CAACV,IAAK;IAChB,WAAW,EAAEU,IAAI,CAACT,WAAY;IAC9B,KAAK,EAAES,IAAI,CAACR;EAAM,GAJbQ,IAAI,CAACX,EAAE;IAAA;IAAA;IAAA;EAAA,QAKd,CACL;EAED,oBACI;IAAS,SAAS,EAAEpB,MAAM,CAACI,KAAM;IAAA,uBAC7B,QAAC,IAAI;MAAA,uBACD;QAAA,UACKyB;MAAS;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAElB;AAAC,GAxEuB1B,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}